<?php/** * @package		Zentools * @version		v1.1 * @author		Joomlabamboo http://www.joomlabamboo.com * @copyright 	Copyright (C) 2007 - 2012 Joomla Bamboo * @license		http://www.gnu.org/licenses/gpl-2.0.html GNU/GPLv2 only */// no direct accessdefined('_JEXEC') or die('Restricted access');/** * Form Field class for the Joomla Framework. * * @package		Mod_zentools * @subpackage	Form * @since		1.6 */class JFormFieldScripts extends JFormField{   protected   $type = 'Scripts';   protected function getInput()   {	   					ob_start();						JHTML::_('behavior.modal');					$document = JFactory::getDocument();					$document->addScript(''.JURI::root(true).'/modules/mod_zentools/js/admin/jquery-1.6.4.min.js');					$document->addScript(''.JURI::root(true).'/modules/mod_zentools/js/admin/jquery.noconflict.js');					$document->addScript(''.JURI::root(true).'/modules/mod_zentools/js/admin/jquery-ui-1.8.16.custom.min.js');														// Check to see if k2 is installed.					$k2 = JPATH_SITE.DS.'administrator'.DS.'components'.DS.'com_k2'.DS.'admin.k2.php';									// Sets variables so we can check if framework or library is present					$jblibrary = JPATH_SITE.DS.'media'.DS.'plg_jblibrary'.DS.'helpers'.DS.'image.php';					$framework = JPATH_SITE.DS.'media'.DS.'zengridframework'.DS.'helpers'.DS.'image.php';																	if(!(file_exists($framework) or file_exists($jblibrary))) {						echo "<div class='zennotice'>You need to install the <a href='http://www.joomlabamboo.com/downloads/zen-grid-framework-downloads' target='_blank'>Zen Grid Framework plugin</a> or the <a href='http://www.joomlabamboo.com/joomla-extensions/jb-library-plugin-a-free-joomla-jquery-plugin' target='_blank'>JB Library plugin</a> to use this module.</div>";					}															if(file_exists($k2)) {						$k2 = 1;					}					else {						$k2 = 0;					} ?>										<script type="text/javascript">						// Hide / Show relevant panels on page load						jQuery(document).ready(function() {							<?php if($k2) { ?>								jQuery("#jform_params_contentSource3").show();								jQuery("#jform_params_contentSource3").next().show();							<?php } 							else { ?>								jQuery("#jform_params_contentSource3").hide();								jQuery("#jform_params_contentSource3").next().hide();															<?php } ?>						});											/////////////////////////////////////////////////////////////////							/////  EDIT THE FOLLOWING VARIABLE VALUES  //////////////////////							/////////////////////////////////////////////////////////////////							// Hide / Show relevant panels on page load							jQuery(document).ready(function() {													jQuery('h3').click(function() {											jQuery(this).next('.zentools').slideToggle();																});																jQuery('#toggleAll').click(function() {											jQuery('div.zentools').slideToggle();																});																// Sets the parameter defaults if ist the first time the script has been used								if(jQuery("#jform_params_useditems").val().length == 0)  {									jQuery("#jform_params_unuseditems").val("title,image,text,date,category,more,comments,extrafields,video,column2,column3,column4");								}								// Sets the two lists as variables																// Presets								//jQuery("#jform_params_useditems").val("text");																var useditems = jQuery("#jform_params_useditems").val();								var unuseditems = jQuery("#jform_params_unuseditems").val();																						// Used items list								var used = useditems.split(",");								var unused = unuseditems.split(",");								var usedlist = jQuery('#sortable');								var unusedlist = jQuery('#sortable2');																							if(jQuery("#jform_params_useditems").val().length > 0)  {									// Repopulates the list of elements. We check for the length of the textbox and if its not empty populate it.									jQuery.each(used, function(i)									{									    var li = jQuery('<li/>').attr('id', used[i]).addClass(used[i]).text(used[i]).appendTo(usedlist);									});								}								// Sets the list of available items								jQuery.each(unused, function(i)								{								    var li = jQuery('<li/>').attr('id', unused[i]).addClass(unused[i]).text(unused[i]).appendTo(unusedlist);								});								// Sets null values for varoous conditions								var grid = 0;								var accordion = 0;								var slideshow = 0;								var carousel = 0;								var masonry =0;								var list =0;								var twitter = 0;								var imagesource = 0;								var joomlasource = 0;								var k2source = 0;								var hasText = 0;								var hasTitle = 0;								var hasImage = 0;								var hasDate = 0;								var column2 = 0;								var column3 = 0;								var column4 = 0;								var hasMore = 0;								var hasFancybox = 0;								// Hide all of the elements		jQuery("#slideshow,#panelGrid,#grid,#carousel,#masonry,#accordion,#list,#twitterPanel,#twitter,#panelContent,#panelK2,#panelTitle,#panelReadmore,#panelDate,#imageresize,#columnwidthpanel,#fancybox,#panelText,#imageDirectory,li#extrafields,li#comments,li#video,#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col2Width-lbl,#jform_params_col2Width,#jform_params_col3Width-lbl,#jform_params_col3Width,#jform_params_col4Width-lbl,#jform_params_col4Width,#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").hide();								// Alt Link param for J2.5								<?php if(version_compare( JVERSION, '2.5', 'ge' )) { ?>										if(jQuery("#jform_params_link2,#jform_params_link1").is(":checked") && jQuery("#jform_params_contentSource1").is(":checked")){											jQuery("#jform_params_altlink,label#jform_params_altlink-lbl").show();										}										else {											jQuery("#jform_params_altlink,label#jform_params_altlink-lbl").hide();										}																										<?php } ?>								switch (jQuery('#jform_params_layout :selected').text()) {									case 'Grid':										var grid = 1;										//jQuery("#panelGrid,h3panelGrid,#grid").show();									break;									// Accordion									case 'Accordion':										var accordion = 1;										//jQuery("#accordion").show();									break;									// Slideshow									case 'Slideshow':										var slideshow = 1;										//jQuery("#slideshow,h3#slideshow").show();									break;									// Carousel									case 'Carousel':										var carousel = 1;										//jQuery("#carousel,h3#carousel").show();									break;									// Masonry									case 'Masonry':										var masonry = 1;										//jQuery("#masonry,h3#masonry").show();									break;									// List									case 'List':										var list = 1;										//jQuery("#list").show();									break;									// Twitter									case 'Twitter':										var twitter = 1;										//jQuery("#twitterPanel,#twitter").show();									break;								}																								// Directory Source								if(jQuery("#jform_params_contentSource0").is(":checked")) {									var imagesource = 1;								}																if (jQuery("#jform_params_contentSource2").is(":checked")) {									var k2source = 1;								}								// Joomla content as a source								if(jQuery("#jform_params_contentSource1").is(":checked")){									var joomlasource = 1;								}																// JFancybox								if(jQuery("#jform_params_link1").is(":checked")){									var hasFancybox = 1;								}								// Variables for sortable list elements								// Hides text related panels if image isnt in the ordering								if(jQuery("#sortable li#text").length == 1)  {									var hasText = 1;								}								if(jQuery("#sortable li#date").length == 1)  {									var hasDate = 1;								}								if(jQuery("#sortable li#image").length == 1)  {									var hasImage = 1;								}								if(jQuery("#sortable li#title").length == 1)  {									var hasTitle= 1;								}								if(jQuery("#sortable li#more").length == 1)  {									var hasMore = 1;								}								if(jQuery("#sortable li#column2").length == 1)  {									var column2 = 1;								}								if(jQuery("#sortable li#column3").length == 1)  {									var column3 = 1;								}								if(jQuery("#sortable li#column4").length == 1)  {									var column4 = 1;								}								// Grid Options								if(grid) {jQuery("#panelGrid,h3#panelGrid,#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").show();}																// List Options								if(list) {jQuery("#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").show();}														// Text Options								if(hasText) {jQuery("#panelText,h3#panelText").show();};								// Image Resize Options								if(hasImage) {jQuery("#imageresize,h3#imageresize").show();}								// Image Source								if(imagesource) {jQuery("#imageDirectory,h3#imageDirectory").show();jQuery("li#date,li#category,li#comments,li#extrafields,li#video,#panelContent,#panelK2").hide();}								// Joomla panel								if(joomlasource){ jQuery("#panelContent,h3#panelContent,li#date,li#category,li#title,#li#text").show();jQuery("li#comments,li#extrafields,li#video,#imageDirectory,#panelK2").hide();}								// k2 panel								if(k2source){ jQuery("#panelK2,li#extrafields,li#comments,li#video,li#date,li#category,li#title,#li#text").show();jQuery("#imageDirectory,#panelContent").hide();}								// Title Options								if(hasTitle) { jQuery("#panelTitle,h3#panelTitle").show();}								// Readmore Options								if(hasMore) { jQuery("#panelReadmore,h3#panelReadmore").show();}									// Date Options								if(hasDate & !imagesource) { jQuery("#panelDate,h3#panelDate").show();}								// Masonry Options								if(masonry) { jQuery("#masonry,h3#masonry").show();}								// Carousel Options								if(carousel) { jQuery("#carousel,h3#carousel").show();}											// slideshowOptions								if(slideshow) { jQuery("#slideshow,h3#slideshow").show();}																// Lightbox Panel								if(hasFancybox) {jQuery("#fancybox,h3#fancybox").show();}								// Column Panels								if(column2 + column3 + column4 > 0) { jQuery("#columnwidthpanel,h3#columnwidthpanel").show();}								if(column2) {jQuery("#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col2Width-lbl,#jform_params_col2Width").show();}								if(column3) {jQuery("#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col3Width-lbl,#jform_params_col3Width").show();}								if(column4) {jQuery("#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col4Width-lbl,#jform_params_col4Width").show();}								switch(jQuery('#jform_params_masonryWidths :selected').text()) {								case 'Use widths specified in meta keywords':									jQuery("#jform_params_masonryColumnWidth-lbl,#jform_params_masonryColumnWidth,#jform_params_masonryGutter-lbl,#jform_params_masonryGutter,#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").show();									jQuery("#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").hide();								break;								case 'Equalise widths of all elements':															jQuery("#jform_params_masonryColumnWidth-lbl,#jform_params_masonryColumnWidth,#jform_params_masonryGutter-lbl,#jform_params_masonryGutter,#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").hide();								jQuery("#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").show();								break;								}																// Toggle for k2 content source								switch(jQuery('#jform_params_k2contentSource :selected').text()) {									case 'Items':										jQuery("#jform_params_itemid,#jform_params_itemid-lbl").show();										jQuery("#jform_params_category_id,#jform_params_category_id-lbl,#jform_params_getChildren,#jform_params_getChildren-lbl").hide();									break;									case 'Categories':										jQuery("#jform_params_itemid,#jform_params_itemid-lbl").hide();										jQuery("#jform_params_category_id,#jform_params_category_id-lbl,#jform_params_getChildren,#jform_params_getChildren-lbl").show();									break;								}																								// toggle for the k2 image option								if(k2source && hasImage ) {									jQuery("#jform_params_itemImgSize,#jform_params_itemImgSize-lbl").show();								}								else {									jQuery("#jform_params_itemImgSize,#jform_params_itemImgSize-lbl").hide();								}									// Retrieve the cookie contents for this instance of the module									var itemOrder = jQuery("#jform_params_useditems").val();																										});							//  Workaround for getting the id of the module							var id=document.URL.split('=')[4];							// set the list selector							var setSelector = "#sortable,#sortable3";							var setSelector2 = "#sortable2";													// function that writes the list order to a cookie							function getOrder() {								// save custom order to cookie								jQuery("#jform_params_useditems").val(jQuery(setSelector).sortable("toArray"));								jQuery("#jform_params_unuseditems").val(jQuery(setSelector2).sortable("toArray"));							}							// function that restores the list order from a cookie							function restoreOrder() {								var list = jQuery(setSelector);								if (list == null) return								// fetch the cookie value (saved order)								var useditems = jQuery("#jform_params_useditems").val();								var unuseditems = jQuery("#jform_params_unuseditems").val();								if (!useditems) return;								// make array from saved order								var IDs = useditems.split(",");								var unusedIDs = unuseditems.split(",");								// fetch current order								var items = list.sortable("toArray");								// make array from current order								var rebuild = new Array();								for ( var v=0, len=IDs.length; v<len; v++ ){									rebuild[IDs[v]] = IDs[v];								}								for (var i = 0, n = IDs.length; i < n; i++) {									// item id from saved order									var itemID = IDs[i];									if (itemID in rebuild) {										// select item id from current order										var item = rebuild[itemID];										// select the item according to current order										var child = jQuery("ui-sortable").children("#" + item);										// select the item according to the saved order										var savedOrd = jQuery("ui-sortable").children("#" + itemID);										// remove all the items										child.remove();										// add the items in turn according to saved order										// we need to filter here since the "ui-sortable"										// class is applied to all ul elements and we										// only want the very first!  You can modify this										// to support multiple lists - not tested!										jQuery("ul.ui-sortable").filter(":first").append(savedOrd);									}								}							}							// code executed when the document loads							jQuery(function() {								// here, we allow the user to sort the items								jQuery(setSelector).sortable({										connectWith: ".connectedLists",										cursor: "move",										placeholder: "ui-state-highlight",										scope: "tags",										opacity: 0.8,										dropOnEmpty: true,										items: "li:not(.disabled)",										revert: 200,										update: function(event,ui) { 											jQuery("#zenmessage p").html("").show();											jQuery("#zenmessage p").html("Settings updated").delay(600).fadeOut(300);												// Variables for sortable list elements												var column2 = 0;												var column3 = 0;												var column4 = 0;												// Hides text related panels if image isnt in the ordering												if(jQuery("#sortable li#text").length == 1)  	{	var hasText = 1;}												if(jQuery("#sortable li#date").length == 1)  	{  	var hasDate = 1;}												if(jQuery("#sortable li#image").length == 1)  	{	var hasImage = 1;}												if(jQuery("#sortable li#title").length == 1)  	{	var hasTitle= 1;}												if(jQuery("#sortable li#more").length == 1)  	{	var hasMore = 1;}												if(jQuery("#sortable li#column2").length == 1)  {	var column2 = 1;}												if(jQuery("#sortable li#column3").length == 1)  {	var column3 = 1;}												if(jQuery("#sortable li#column4").length == 1)  {	var column4 = 1;}												if(hasText) {jQuery("#panelText").show();} else { jQuery("#panelText,h3#panelText").hide();} 												if(hasTitle) {jQuery("#panelTitle").show();} else { jQuery("#panelTitle,h3#panelTitle").hide();} 												if(hasDate) {jQuery("#panelDate").show();} else { jQuery("#panelDate,h3#panelDate").hide();} 												if(hasMore) {jQuery("#panelReadmore").show();} else { jQuery("#panelReadmore,h3#panelReadmore").hide();} 												if(hasImage) {jQuery("#imageresize").show();} else { jQuery("#imageresize,h3#imageresize").hide();} 												// Column Panels												if(column2 + column3 + column4 > 0) { jQuery("#columnwidthpanel,h3#columnwidthpanel").show();} else {jQuery("#columnwidthpanel,h3#columnwidthpanel").hide();}												if(column2) {jQuery("#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col2Width-lbl,#jform_params_col2Width").show();}												if(column3) {jQuery("#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col3Width-lbl,#jform_params_col3Width").show();}												if(column4) {jQuery("#jform_params_col1Width-lbl,#jform_params_col1Width,#jform_params_col4Width-lbl,#jform_params_col4Width").show();}																																														getOrder();											jQuery("li#empty").remove(); 											var itemOrder = jQuery("#paramsuseditems").val();										}								});								jQuery(setSelector2).sortable({										cursor: "move",										placeholder: "ui-state-highlight",										scope: "tags",										opacity: 0.8,										dropOnEmpty: true,										items: "li:not(.disabled)",										revert: 200								});								jQuery("#sortable2,#sortable").sortable({								    connectWith: jQuery("#sortable,#sortable2")								});								// here, we reload the saved order								restoreOrder();							});							jQuery(document).ready(function() {								jQuery(".panel input,.panel select").change(function () {									jQuery("#zenmessage p").html("").show();									jQuery("#zenmessage p").html("Settings updated").delay(600).fadeOut(300);										switch (jQuery('#jform_params_layout :selected').text()) {											case 'Grid':												var grid = 1;												//jQuery("#panelGrid,h3panelGrid,#grid").show();											break;											// Accordion											case 'Accordion':												var accordion = 1;												//jQuery("#accordion").show();											break;											// Slideshow											case 'Slideshow':												var slideshow = 1;												//jQuery("#slideshow,h3#slideshow").show();											break;											// Carousel											case 'Carousel':												var carousel = 1;												//jQuery("#carousel,h3#carousel").show();											break;											// Masonry											case 'Masonry':												var masonry = 1;												//jQuery("#masonry,h3#masonry").show();											break;											// List											case 'List':												var list = 1;												//jQuery("#list").show();											break;											// Twitter											case 'Twitter':												var twitter = 1;												//jQuery("#twitterPanel,#twitter").show();											break;										}																					// Alt Link param for J2.5											<?php if(version_compare( JVERSION, '2.5', 'ge' )) { ?>													if(jQuery("#jform_params_link2,#jform_params_link1").is(":checked") && jQuery("#jform_params_contentSource1").is(":checked")){														jQuery("#jform_params_altlink,label#jform_params_altlink-lbl").show();													}													else {														jQuery("#jform_params_altlink,label#jform_params_altlink-lbl").hide();													}											<?php } ?>										// Restate the variables just in case we need them here										if(jQuery("#sortable li#text").length == 1)  	{	var hasText = 1;}										if(jQuery("#sortable li#date").length == 1)  	{  	var hasDate = 1;}										if(jQuery("#sortable li#image").length == 1)  	{	var hasImage = 1;}										if(jQuery("#sortable li#title").length == 1)  	{	var hasTitle= 1;}										if(jQuery("#sortable li#more").length == 1)  	{	var hasMore = 1;}										if(jQuery("#sortable li#column2").length == 1)  {	var column2 = 1;}										if(jQuery("#sortable li#column3").length == 1)  {	var column3 = 1;}										if(jQuery("#sortable li#column4").length == 1)  {	var column4 = 1;}																			// Directory Source										if(jQuery("#jform_params_contentSource0").is(":checked")) {											var imagesource = 1;										}										// K2 Source										if (jQuery("#jform_params_contentSource2").is(":checked")) {											var k2source = 1;										}										// Joomla content as a source										if(jQuery("#jform_params_contentSource1").is(":checked")){											var joomlasource = 1;										}																				// JFancybox										if(jQuery("#jform_params_link1").is(":checked")){											var hasFancybox = 1;										}																		if(hasDate & !imagesource) { jQuery("#panelDate,h3#panelDate").show();}										// Image Source										if(imagesource) {jQuery("#imageDirectory,h3#imageDirectory").show();jQuery("li#date,li#category,li#comments,li#extrafields,li#video,#panelContent,#panelK2").hide();}										// Joomla panel										if(joomlasource){ jQuery("#panelContent,h3#panelContent,li#date,li#category,li#title,#li#text,li#date").show();jQuery("li#comments,li#extrafields,li#video,#imageDirectory,#panelK2,h3#panelK2").hide();}										// k2 panel										if(k2source){ jQuery("#panelK2,h3#panelK2,li#extrafields,li#comments,li#video,li#date,li#category,li#title,#li#text").show();jQuery("#imageDirectory,h3#imageDirectory,#panelContent,h3#panelContent").hide();}										// Masonry Options										if(masonry) { jQuery("#masonry,h3#masonry").show();} else { jQuery("#masonry,h3#masonry").hide();}										// Carousel Options										if(carousel) { jQuery("#carousel,h3#carousel").show();}	else { jQuery("#carousel,h3#carousel").hide();	}												// slideshowOptions										if(slideshow) { jQuery("#slideshow,h3#slideshow").show();} else  { jQuery("#slideshow,h3#slideshow").hide();}										// Grid Options														if(grid) {jQuery("#panelGrid,h3#panelGrid,#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").show();}										// List Options										if(list) {jQuery("#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").show();}										switch(jQuery('#jform_params_masonryWidths :selected').text()) {										case 'Use widths specified in meta keywords':											jQuery("#jform_params_masonryColumnWidth-lbl,#jform_params_masonryColumnWidth,#jform_params_masonryGutter-lbl,#jform_params_masonryGutter,#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").show();											jQuery("#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").hide();										break;										case 'Equalise widths of all elements':																		jQuery("#jform_params_masonryColumnWidth-lbl,#jform_params_masonryColumnWidth,#jform_params_masonryGutter-lbl,#jform_params_masonryGutter,#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").hide();											jQuery("#jform_params_masonryColWidths-lbl,#jform_params_masonryColWidths").show();											break;											}																					// Toggle for k2 content source										switch(jQuery('#jform_params_k2contentSource :selected').text()) {											case 'Items':												jQuery("#jform_params_itemid,#jform_params_itemid-lbl").show();												jQuery("#jform_params_category_id,#jform_params_category_id-lbl,#jform_params_getChildren,#jform_params_getChildren-lbl").hide();											break;											case 'Categories':												jQuery("#jform_params_itemid,#jform_params_itemid-lbl").hide();												jQuery("#jform_params_category_id,#jform_params_category_id-lbl,#jform_params_getChildren,#jform_params_getChildren-lbl").show();											break;										}																																// toggle for the k2 image option										if(k2source && hasImage ) {											jQuery("#jform_params_itemImgSize,#jform_params_itemImgSize-lbl").show();										}										else {											jQuery("#jform_params_itemImgSize,#jform_params_itemImgSize-lbl").hide();										}																					// Lightbox Panel										if(hasFancybox) {											jQuery("#fancybox,h3#fancybox").show();										}										else {											jQuery("#fancybox,h3#fancybox").hide();										}									var itemOrder = jQuery("#jform_params_useditems").val();								});																								jQuery("select#jform_params_layout").change(function () {																			switch (jQuery('#jform_params_layout :selected').text()) {											case 'Grid':												var grid = 1;												//jQuery("#panelGrid,h3panelGrid,#grid").show();											break;											// Accordion											case 'Accordion':												var accordion = 1;												//jQuery("#accordion").show();											break;											// Slideshow											case 'Slideshow':												var slideshow = 1;												//jQuery("#slideshow,h3#slideshow").show();											break;											// Carousel											case 'Carousel':												var carousel = 1;												//jQuery("#carousel,h3#carousel").show();											break;											// Masonry											case 'Masonry':												var masonry = 1;												//jQuery("#masonry,h3#masonry").show();											break;											// List											case 'List':												var list = 1;												//jQuery("#list").show();											break;											// Twitter											case 'Twitter':												var twitter = 1;												//jQuery("#twitterPanel,#twitter").show();											break;										}																					// Grid Options															if(grid) {jQuery("#panelGrid,h3#panelGrid,#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").show();}											else {jQuery("#panelGrid,h3#panelGrid,#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").hide();}											// List Options											if(list) {jQuery("#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").show();}											else {jQuery("#panelGrid,h3#panelGrid,#jform_params_categoryFilter,label#jform_params_categoryFilter-lbl").hide();}																												// Check for accordion mode									//	if(accordion && !jQuery("#items li:nth-child(2)").hasClass("title")) {									//		alert("Please note that the accordion mode works most effectively if the title element is the first element in the element list. "); 									//	}																			//	if(slideshow && !jQuery("#items li:nth-child(2)").hasClass("image")) {									//		alert("Please note that the accordion mode works most effectively if the title element is position in the first position in the list of elements. "); 									//	}																												});							});								</script>							<div id="zentools">			<?php	return ob_get_clean();		}		function fetchTooltip($label, $description, &$node, $control_name, $name){			// Output			return '&nbsp;';		}	}